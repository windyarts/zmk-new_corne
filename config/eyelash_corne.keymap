#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};


/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <200>;
        };

        shifthr: shifthr {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFTHR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <185>;
            flavor = "tap-preferred";
            quick-tap-ms = <185>;
        };

        weak: weak {
            compatible = "zmk,behavior-hold-tap";
            label = "WEAK";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <230>;
        };

        backspace: backspace {
            compatible = "zmk,behavior-tap-dance";
            label = "BACKSPACE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LC(BACKSPACE)>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB       &kp Q           &kp W           &kp E               &kp R             &kp T                                &kp UP                &kp Y        &kp U             &kp I               &kp O           &kp P                   &kp BSPC
&kp CAPSLOCK  &hm LEFT_ALT A  &hm LEFT_GUI S  &hm LEFT_CONTROL D  &hm LEFT_SHIFT F  &kp G                      &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &hm LEFT_SHIFT J  &hm LEFT_CONTROL K  &hm LEFT_GUI L  &hm LEFT_ALT SEMICOLON  &kp SQT
&kp LSHIFT    &kp Z           &kp X           &kp C               &kp V             &kp B        &kp C_MUTE              &kp DOWN              &kp N        &kp M             &kp COMMA           &kp DOT         &kp FSLH                &kp ENTER
                                              &kp LGUI            &mo 2             &lt 1 ENTER                                                &lt 1 SPACE  &mo 2             &kp LEFT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1     &kp N2    &kp N3          &kp N4                &kp N5                                        &mmv MOVE_UP                     &kp N6     &kp N7                 &kp N8           &kp N9      &kp N0    &trans
&trans  &kp GRAVE  &kp LBKT  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp MINUS                     &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp EQUAL  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RBKT    &kp BSLH  &trans
&trans  &kp TILDE  &trans    &caps_word      &kp LESS_THAN         &kp UNDERSCORE  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp PLUS   &kp GREATER_THAN       &kp CARET        &kp DOLLAR  &kp PIPE  &trans
                             &trans          &trans                &trans                                                                         &trans     &trans                 &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL  &kp AT    &kp HASH     &kp DLLR       &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS  &kp ASTRK     &kp LPAR   &kp RPAR  &trans
&trans  &trans    &kp HOME  &kp PAGE_UP  &kp PAGE_DOWN  &kp END              &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT   &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans    &trans
&kp F1  &kp F2    &kp F3    &kp F4       &kp F5         &kp F6     &trans                    &mmv MOVE_DOWN                   &kp F7     &kp F8    &kp F9        &kp F10    &kp F11   &kp F12
                            &trans       &trans         &trans                                                                &trans     &trans    &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &bt BT_NXT  &trans  &trans  &trans  &trans                                         &mmv MOVE_UP                     &trans  &trans  &trans  &trans  &trans      &trans
&trans          &bt BT_CLR  &trans  &trans  &trans  &trans                         &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &trans  &trans  &trans  &trans      &trans
&bootloader     &sys_reset  &trans  &trans  &trans  &rgb_ug RGB_TOG  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans  &trans  &trans  &trans  &sys_reset  &bootloader
                                    &trans  &trans  &trans                                                                          &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        fn {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };
};
